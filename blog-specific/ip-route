#!/bin/bash

CONF_DIR=$(dirname $0)/../conf
pushd $CONF_DIR >/dev/null
if [ ! -f "USTC.txt" ]; then
    echo "CIDR files not exist"
    exit 1
fi

function set_route() {
    gw=$1
    tableid=$2
    (echo "route flush table $tableid"; sed 's/\([ ;#].*\)//g;/^$/d' | awk "{printf(\"route replace %s via $gw table $tableid\n\", \$1); }") | ip -batch -
}

# set up IP-in-IP tunnel
ip tunnel del tunipip
ip tunnel add tunipip mode ipip local 202.141.160.99 remote 202.38.95.110
ip link set tunipip up
ip addr add 10.38.160.99/32 dev tunipip
ip route replace 10.38.95.110/32 dev tunipip

ip tunnel del tunipip2
ip tunnel add tunipip2 mode ipip local 202.141.176.99 remote 202.141.176.110
ip link set tunipip2 up
ip addr add 10.141.176.99/32 dev tunipip2
ip route replace 10.141.176.110/32 dev tunipip2

# define routing table preference (high to low)
route_pref="mirrors_mobile ustc cernet mobile telecom chnroutes whitelist blocked"

counter=10000
for i in $route_pref; do
    counter=$(($counter+1))
    eval $i=$counter
done

# generate routing tables
cat mirrors-mobile.txt | set_route 10.141.176.110 $mirrors_mobile
cat USTC.txt | set_route 202.141.160.126 $ustc
cat CHINANET.txt CNC.txt google.txt | set_route 202.141.160.126 $telecom
cat CMCC.txt | set_route 202.141.176.126 $mobile
cat CERNET.txt | set_route 10.38.95.110 $cernet
cat chnroutes.txt abroad-telecom.txt | set_route 202.141.160.126 $chnroutes
cat paper-sites.txt | set_route 202.141.176.126 $whitelist

# set up ip rule
counter=10000
for i in $route_pref; do
    counter=$(($counter+1))
    origpref=$(ip rule | grep "from all lookup $counter" | awk 'BEGIN{FS=":"}{print $1}')
    if [ ! -z "$origpref" ]; then
        ip rule del from all lookup $counter pref $origpref
    fi
    ip rule add from all lookup $counter pref $counter
done

while true; do
    counter=$(($counter+1))
    origpref=$(ip rule | grep "from all lookup $counter" | awk 'BEGIN{FS=":"}{print $1}')
    [ -z "$origpref" ] && break
    ip rule del from all lookup $counter pref $origpref
done

# default for abroad route
DEFAULT_ABROAD_TUNNEL=true
$DEFAULT_ABROAD_TUNNEL || ip route replace default via 202.141.176.126

# IPv6 route
cat chnroutes-v6.txt | while read prefix comment; do
    ip -6 route add $prefix via 2001:da8:d800:f001::1    2>/dev/null
done

popd >/dev/null
IPV6_SOCKS_ENABLE=false
IPV6_SOCKS_SCRIPT=$(dirname $0)/ipv6-tun2socks
IPV6_GRE_TUNNEL_ENABLE=false
if [ -x "$IPV6_SOCKS_SCRIPT" ] && $IPV6_SOCKS_ENABLE; then
    echo "IPv6 tun2socks initializing"
    $IPV6_SOCKS_SCRIPT
    cat $CONF_DIR/blacklist-v6.txt | while read prefix comment; do
        ip -6 route add unreachable $prefix 2>/dev/null
    done
elif $IPV6_GRE_TUNNEL_ENABLE; then
    echo "Abroad IPv6 go through GRE tunnel"
    if [ -z "$(ip tunnel show blogv6)" ]; then
        ip tunnel add blogv6 mode gre remote 127.0.0.1 local 202.141.176.99 ttl 255
        ip link set blogv6 up
        ip -6 addr add fdfe:dcba:9876::2/30 dev blogv6
    fi
    cat $CONF_DIR/blacklist-v6.txt | while read prefix comment; do
        ip -6 route add unreachable $prefix 2>/dev/null
    done
    ip -6 route add 2000::/3 via fdfe:dcba:9876::1 dev blogv6
    ip -6 route del unreachable 2000::/3    2>/dev/null
else
    echo "Disable abroad IPv6"
    ip -6 route add unreachable 2000::/3    2>/dev/null
fi

IPV4_SOCKS_SCRIPT=$(dirname $0)/ipv4-tun2socks
IPV4_SOCKS_ENABLE=false
IPV4_GRE_TUNNEL_ENABLE=true
if [ -x "$IPV4_SOCKS_SCRIPT" ] && $IPV4_SOCKS_ENABLE; then
    echo "IPv4 tun2socks initializing"
    $IPV4_SOCKS_SCRIPT
    if $DEFAULT_ABROAD_TUNNEL; then
        ip route replace default via 10.0.1.1
        ip route flush table $blocked
    else
        cat $CONF_DIR/blocked-ip.txt | set_route 10.0.1.1 $blocked
    fi
elif $IPV4_GRE_TUNNEL_ENABLE; then
    echo "Abroad IPv4 go though GRE tunnel"
    remote="128.199.222.182"
    ip route replace $remote/32 via 202.141.176.126
    if [ -z "$(ip tunnel show blog)" ]; then
        ip tunnel add blog mode gre remote $remote local 202.141.176.99 ttl 255
        ip link set blog up
        ip addr add 10.0.2.2/24 dev blog
    else
        ip tunnel change blog mode gre remote $remote local 202.141.176.99 ttl 255
    fi
    if $DEFAULT_ABROAD_TUNNEL; then
        ip route replace default via 10.0.2.1
        ip route flush table $blocked
    else
        cat $CONF_DIR/blocked-ip.txt | set_route 10.0.2.1 $blocked
    fi
else
    echo "No available tunnel for abroad IP"
fi

exit 0
