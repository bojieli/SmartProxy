#!/bin/bash
# Usage: param 0 is gateway. If no param, then set all known gateways

BASEDIR=/home/boj/smartproxy/conf
blockedlist=$BASEDIR/blocked-ip.txt
whitelist=$BASEDIR/forward-whitelist.txt

if [ ! -f "$blockedlist" ]; then
    echo "CIDR files not exist"
    exit 1
fi

function replace_table() {
    ip route flush table $2
    cat $3 | \
    while read prefix comment; do
        if [[ "$prefix" =~ ^[0-9.]+(/[0-9]+)?$ ]]; then
            ip route add $prefix via $1 table $2
        fi
    done
}

specified_gw=$1
known_gw="10.9.0.1 10.10.0.1 10.11.0.1"

no=2000
for gw in $known_gw; do
    if [ -z "$specified_gw" ] || [ "$gw" == "$specified_gw" ]; then
        replace_table $gw $no $blockedlist
    fi
    no=$(($no+1))
done
maxtable=$no

if [ -f "$whitelist" ]; then
    replace_table 202.141.176.126 1999 $whitelist
fi

# flush related ip rules
pref=999
while true; do
    [ -z "$(ip rule show | grep $pref:)" ] && break
    while ip rule del pref $pref 2>/dev/null; do echo -n; done
    pref=$(($pref+1))
done

# currently IP conntrack and NAT are inconsistent
# disable round-robin until we find the root cause
exit 0

# insert new rules
mark=1
for i in $known_gw; do
    ip rule add fwmark $mark lookup 1999 pref 999 # whitelist
    table=$((1999+$mark))
    pref=1000 # pref 1000 is default, others are backups
    for j in $known_gw; do
        ip rule add fwmark $mark lookup $table pref $pref
        table=$(($table+1))
        [ $table -eq $maxtable ] && table=2000
        pref=$(($pref+1))
    done
    mark=$(($mark+1))
done
