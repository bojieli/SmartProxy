#!/bin/bash
# for proxy client

# your IP, gateway and interface
LOCALIP=202.141.160.99
GATEWAY=202.141.160.126
DEV=eth0
# proxy server IP
PROXYIP=202.141.176.110

# These two IPs are arbitrary as long as they are consistent with proxy config
LOCALVIRTIP=10.141.160.99
PROXYVIRTIP=10.141.176.110

# another proxy peer for a different route
PROXYIP2=202.38.95.110
LOCALVIRTIP=10.38.160.99
PROXYVIRTIP=10.38.95.110

if [ `whoami` != 'root' ]; then
    echo "This script should be run by root!"
    exit 1
fi
cd `dirname $0`
if [ ! -d "conf" ]; then
    echo "Routing config files do not exist"
    exit 1
fi

sysctl -q -w net.ipv4.ip_forward=1

# Inbound traffic should be replyed through the same interface
ip route replace default via $GATEWAY dev $DEV table 16099
if [ $(ip rule | grep "from $LOCALIP lookup 16099" | wc -l) -eq 0 ]; then
    ip rule add from $LOCALIP lookup 16099
fi

# Create IP-in-IP tunnel
if [ $(ip tunnel | grep "tunipip" | wc -l) -eq 0 ]; then
    ip tunnel add tunipip mode ipip local $LOCALIP remote $PROXYIP
fi
if [ $(ip addr | grep "$LOCALVIRTIP/32" | wc -l) -eq 0 ]; then
    ip addr add $LOCALVIRTIP/32 dev tunipip
fi
ifconfig tunipip up
ip route replace $PROXYVIRTIP/32 dev tunipip

# The second IP-in-IP tunnel
if [ $(ip tunnel | grep "tunipip2" | wc -l) -eq 0 ]; then
    ip tunnel add tunipip2 mode ipip local $LOCALIP remote $PROXYIP2
fi
if [ $(ip addr | grep "$LOCALVIRTIP2/32" | wc -l) -eq 0 ]; then
    ip addr add $LOCALVIRTIP2/32 dev tunipip2
fi
ifconfig tunipip2 up
ip route replace $PROXYVIRTIP2/32 dev tunipip2

# China Telecom go through default gateway
while read prefix; do
    ip route replace $prefix via $GATEWAY dev $DEV
done <conf/CHINANET.txt

# CERNET go through proxy2
while read prefix; do
    ip route replace $prefix via $PROXYVIRTIP2 dev tunipip2
done <conf/CERNET.txt

# The default route is proxy
ip route replace default via $PROXYVIRTIP dev tunipip
